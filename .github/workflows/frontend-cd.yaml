name: Frontend Continuous Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:

env:
  WORKING_DIR: ./starter/frontend
  ECR_REPO_URL: ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_DEFAULT_REGION}}.amazonaws.com/frontend

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm install
        working-directory: ${{ env.WORKING_DIR }}

      - name: Run lint
        run: npm run lint
        working-directory: ${{ env.WORKING_DIR }}

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm install
        working-directory: ${{ env.WORKING_DIR }}

      - name: Run tests
        run: npm run test
        working-directory: ${{ env.WORKING_DIR }}

  build:
    runs-on: ubuntu-latest
    needs: [lint, test] 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm install
        working-directory: ${{ env.WORKING_DIR }}

      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          docker build --build-arg REACT_APP_MOVIE_API_URL=${{ vars.REACT_APP_MOVIE_API_URL }} -t mp-frontend:${{ github.sha }} -t mp-frontend:latest .
          docker tag mp-frontend:latest ${{ env.ECR_REPO_URL }}:latest
          docker tag mp-frontend:${{ github.sha }} ${{ env.ECR_REPO_URL }}:${{ github.sha }}
          echo "Docker image built successfully."
        working-directory: ${{ env.WORKING_DIR }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code 548883109133
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/${{secrets.AWS_ROLE}}
          aws-region: ${{secrets.AWS_DEFAULT_REGION}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push Docker image to ECR
        run: |
          echo "Pushing Docker image to ECR..."             
          docker push ${{ env.ECR_REPO_URL }}:latest
          docker push ${{ env.ECR_REPO_URL }}:${{ github.sha }}
          echo "Docker image pushed to ECR successfully."
        working-directory: ${{ env.WORKING_DIR }}

      - name: Deploy to Kubernetes
        run: |
          aws eks update-kubeconfig
          kustomize edit set image frontend=${{ env.ECR_REPO_URL }}:${{ github.sha }}
          kustomize build | kubectl apply -f -        
        working-directory: ${{ env.WORKING_DIR }}/k8s
          # kubectl apply -f k8s/deployment.yaml  # Adjust the path to your Kubernetes manifests