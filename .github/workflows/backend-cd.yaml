name: Backend Continuous Integration

on:
  push:
    branches:
      - main
    paths:
      - "starter/backend/**"
  workflow_dispatch:

env:
  WORKING_DIR: ./starter/backend
  ECR_REPO_URL: ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_DEFAULT_REGION}}.amazonaws.com/backend

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9.20'

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: pipenv install -d
        working-directory: ${{ env.WORKING_DIR }}

      - name: Run linting
        run: pipenv run lint
        working-directory: ${{ env.WORKING_DIR }}

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9.20'

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: pipenv install -d
        working-directory: ${{ env.WORKING_DIR }}

      - name: Run test
        run: pipenv run test
        working-directory: ${{ env.WORKING_DIR }}

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and export
        uses: docker/build-push-action@v6
        with:
          context: ./${{ env.WORKING_DIR }}
          tags: mp-backend:latest
          outputs: type=docker,dest=/tmp/mp-backend.tar
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: mp-backend
          path: /tmp
      
      - name: Load image
        run: |
          docker load --input /tmp/mp-backend.tar
          docker image ls -a          

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push Docker image to ECR
        run: |
          echo "Pushing Docker image to ECR..."     
          docker image ls -a      
          docker tag mp-backend:latest ${{ env.ECR_REPO_URL }}:latest
          docker push ${{ env.ECR_REPO_URL }}:latest
          docker tag mp-backend:latest ${{ env.ECR_REPO_URL }}:${{ github.sha }}
          docker push ${{ env.ECR_REPO_URL }}:${{ github.sha }}
          echo "Docker image pushed to ECR successfully."
        working-directory: ${{ env.WORKING_DIR }}

      - name: Deploy to Kubernetes
        run: |
          aws eks update-kubeconfig --name cluster
          kubectl version
          kustomize edit set image backend=${{ env.ECR_REPO_URL }}:${{ github.sha }}
          kustomize build | kubectl apply -f -        
        working-directory: ${{ env.WORKING_DIR }}/k8s